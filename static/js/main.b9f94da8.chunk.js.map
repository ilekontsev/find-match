{"version":3,"sources":["components/Login/Login1.tsx","components/Game/Game.tsx","components/Score/Score.tsx","utils/Storage/index.ts","components/App/App.tsx","index.tsx"],"names":["Login","props","useState","value","setValue","users","setUsers","history","useHistory","selectUser","e","user","target","innerText","push","loginUser","className","onClick","InputBase","placeholder","onChange","textInput","allUsers","JSON","parse","localStorage","getItem","arrSearch","forEach","item","name","toUpperCase","includes","onKeyDown","buttonCode","key","trim","length","endAdornment","InputAdornment","position","stopPropagation","map","Game","createCardsArr","i","id","isActive","findMatch","card","duplicateCardsArray","concat","sort","Math","random","cardArr","setCardArr","blockOnClick","setBlockOnClick","setUser","score","setScore","useEffect","setTimeout","hiddenFront","updateCard","firstElement","secondElement","updChecked","updCardArr","filter","console","log","Number","funcScore","every","scoreNow","gameOver","handleClickCard","ind","index","changeIsActive","openCard","src","alt","Score","currentUser","setCurrentUser","updUser","CurrentScore","item1","item2","setItem","stringify","Logger","error","stringified","App","currentScore","setCurrentScore","Storage","find","undefined","exact","path","component","Login1","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9f94da8.chunk.js","sourcesContent":["import React, { ChangeEvent, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport { InputBase } from \"@material-ui/core\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport \"./Login.css\";\nimport { UserDesc } from \"../../interfaces/interfaces\";\n\nfunction Login(props: any) {\n  const [value, setValue] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const history = useHistory();\n  const writeInput = (e: ChangeEvent<HTMLInputElement>) => {\n    const textInput = e.target.value;\n    setValue(textInput);\n    if (textInput) {\n      const allUsers: UserDesc[] = JSON.parse(\n        localStorage.getItem(\"users\") || \"[]\"\n      );\n      const arrSearch: string[] = [];\n      allUsers.forEach((item) => {\n        if (item.name.toUpperCase().includes(textInput.toUpperCase())) {\n          // @ts-ignore\n          arrSearch.push({ name: item.name });\n        }\n      });\n      // @ts-ignore\n      setUsers(arrSearch);\n      return 0;\n    }\n    setUsers([]);\n  };\n  const saveLogin = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    const target = e.target as HTMLInputElement;\n    const buttonCode = e.key;\n    const user = target.value;\n    if (buttonCode === \"Enter\" && user.trim().length) {\n      setValue(\"\");\n      history.push(\"/game\");\n      props.loginUser(user);\n    }\n  };\n  const showUsers = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    const allUsers = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\n    setUsers(allUsers);\n  };\n  const selectUser = (e: React.MouseEvent) => {\n    const target = e.target as HTMLElement;\n    const user = target.innerText;\n    history.push(\"/game\");\n    props.loginUser(user);\n  };\n  const hiddenBlockSearch = () => {\n    setUsers([]);\n  };\n  // @ts-ignore\n  return (\n    <div className=\"root-wrap-login\" onClick={hiddenBlockSearch}>\n      <div className=\"wrap-login\">\n        <div className=\"wrap-text-login\">\n          <p>Game</p>\n          <p>Find Matches</p>\n        </div>\n        <div className=\"wrap-input-login\">\n          <InputBase\n            placeholder={\"Input name...\"}\n            className=\"input-login\"\n            value={value}\n            onChange={writeInput}\n            onKeyDown={saveLogin}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <ArrowDropDownIcon\n                  className={\"icon-input-login\"}\n                  onClick={showUsers}\n                />\n              </InputAdornment>\n            }\n          />\n          <div className={users ? \"result-users-login\" : \"hidden-block\"}>\n            {users.map((item: UserDesc) => (\n              <div\n                key={item.name + 12}\n                className=\"element-user-login\"\n                onClick={selectUser}\n              >\n                <p className=\"item-login\">{item.name}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CardsDesc, UserDesc } from \"../../interfaces/interfaces\";\nimport Storage from \"../../utils/Storage\";\nimport \"./Game.css\";\n\nfunction Game(props: any) {\n  // создание массива с карточками\n  let createCardsArr: CardsDesc[] = [];\n  for (let i = 0; i < 12; i++) {\n    createCardsArr[i] = {\n      id: i,\n      isActive: true,\n      findMatch: false,\n      card: `/assets/${i + 1}.jpg`,\n    };\n  }\n  // дублируем карточки и перемешиваем\n  const duplicateCardsArray = createCardsArr.map((item) => ({ ...item }));\n  createCardsArr = createCardsArr.concat(duplicateCardsArray);\n  function shuffle(array: CardsDesc[]) {\n    array.sort(() => Math.random() - 0.5);\n  }\n  shuffle(createCardsArr);\n\n  const [cardArr, setCardArr] = useState(createCardsArr);\n  const [blockOnClick, setBlockOnClick] = useState(true);\n  const [user, setUser] = useState({ name: \"player\" });\n  const [score, setScore] = useState(0);\n  const history = useHistory();\n\n  // перевернуть карточки\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\") || \"{}\");\n    setUser(user);\n    setTimeout(() => {\n      const hiddenFront = createCardsArr.map((item) => {\n        if (item.isActive) {\n          item.isActive = false;\n          return item;\n        }\n        return item;\n      });\n      setCardArr(hiddenFront);\n    }, 3000);\n  }, []);\n\n  // переворачиваем выбраную карту\n  const changeIsActive = (value: CardsDesc, ind: number) => {\n    return cardArr.filter((item, index: number) => {\n      if (index === ind) {\n        item.isActive = true;\n        return item;\n      }\n      return item;\n    });\n  };\n\n  const gameOver = (updCardArr: CardsDesc[]) => {\n    const checkFull = updCardArr.every((item) => item.findMatch);\n    if (checkFull) {\n      setTimeout(() => {\n        history.push(\"/score\");\n        props.scoreNow(score + 100);\n      }, 1600);\n    }\n  };\n\n  const funcScore = (updChecked: boolean) => {\n    console.log(updChecked);\n    if (!updChecked && score !== 0) {\n      setScore(score - 20);\n    }\n    if (updChecked) {\n      setScore(Number(score) + 100);\n    }\n  };\n  // сравниваем карточки\n  const updateCard = (\n    firstElement: CardsDesc,\n    secondElement: CardsDesc,\n    updChecked: boolean\n  ) => {\n    const updCardArr = cardArr.filter((item) => {\n      if (firstElement === item || secondElement === item) {\n        item.isActive = updChecked;\n        item.findMatch = updChecked;\n        return item;\n      }\n      return item;\n    });\n    funcScore(updChecked);\n    gameOver(updCardArr);\n    setCardArr(updCardArr);\n    setBlockOnClick(true);\n  };\n\n  const handleClickCard = (value: CardsDesc, ind: number) => {\n    if (blockOnClick) {\n      setCardArr(changeIsActive(value, ind));\n\n      const openCard = cardArr.filter(\n        (item) => item.isActive && !item.findMatch\n      );\n      const [firstElement, secondElement] = openCard;\n      if (openCard.length === 2) {\n        setBlockOnClick(false);\n\n        if (firstElement.id === secondElement.id) {\n          updateCard(firstElement, secondElement, true);\n        } else {\n          setTimeout(() => {\n            updateCard(firstElement, secondElement, false);\n          }, 700);\n        }\n      }\n    }\n  };\n  return (\n    <div className=\"root-wrap-game\">\n      <div className=\"wrap-score-game\">\n        <div className=\"block-score-user\">\n          {user.name}: {score}\n        </div>\n      </div>\n\n      <div className=\"wrap-game\">\n        {cardArr.map((item, index: number) => (\n          <div\n            key={index}\n            onClick={() => handleClickCard(item, index)}\n            className={item.isActive ? \"game-card flip\" : \"game-card\"}\n          >\n            <div className=\"wrap-front-card\">\n              <img src={item.card} alt=\"\" className=\"front-card\" />\n            </div>\n            <div className=\"wrap-front-back\">\n              <img src=\"/assets/backimg.png\" alt=\"\" className=\"back-card\" />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Score.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { UserDesc } from \"../../interfaces/interfaces\";\n\nfunction Score(props: any) {\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState({\n    index: 1,\n    name: \"player\",\n    score: 0,\n  });\n  const history = useHistory();\n  useEffect(() => {\n    const allUsers: UserDesc[] = JSON.parse(\n      localStorage.getItem(\"users\") || \"[]\"\n    );\n    const updUser = allUsers.filter((item) => {\n      if (item.name === props.user.name && item.score < props.CurrentScore) {\n        item.score = props.CurrentScore;\n      }\n      return item;\n    });\n    updUser.sort((item1, item2) => item2.score - item1.score);\n    // @ts-ignore\n    setUsers(updUser);\n    // eslint-disable-next-line array-callback-return\n    updUser.forEach((item, index: number) => {\n      if (item.name === props.user.name) {\n        item.index = index + 1;\n        // @ts-ignore\n        setCurrentUser(item);\n      }\n    });\n    localStorage.setItem(\"users\", JSON.stringify(updUser));\n  }, []);\n\n  const restartGame = () => {\n    history.push(\"/game\");\n  };\n  const logout = () => {\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"root-wrap-score\">\n      <div className=\"wrap-score\">\n        <table className=\"table-wrap-score\">\n          <thead>\n            <tr>\n              <th>№</th>\n              <th>User</th>\n              <th>Current score</th>\n              <th>Best score</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{currentUser.index}</td>\n              <td>{currentUser.name}</td>\n              <td>{props.CurrentScore}</td>\n              <td>{currentUser.score}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"wrap-button-score\">\n        <button\n          onClick={restartGame}\n          className=\"restart-button-score but-score\"\n        >\n          Restart game\n        </button>\n        <button onClick={logout} className=\"logout-button-score but-score\">\n          New user\n        </button>\n      </div>\n\n      <div className=\"wrap-score\">\n        <table className=\"table-wrap-score\">\n          <thead>\n            <tr>\n              <th>№</th>\n              <th>Users</th>\n              <th>Best score</th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((item: UserDesc, index: number) => (\n              <tr key={index + item.name}>\n                <td>{index + 1}</td>\n                <td>{item.name}</td>\n                <td>{item.score}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default Score;\n","const Logger = {\n  error: (e: Error): void => {\n    console.error(e);\n  },\n};\n\nclass Storage {\n  setItem<T>(key: string, value: T): void {\n    try {\n      const stringified = JSON.stringify(value);\n      localStorage.setItem(key, stringified);\n    } catch (e: any) {\n      Logger.error(e);\n    }\n  }\n\n  getItem<T>(key: string): T | undefined {\n    try {\n      const value = localStorage.getItem(key);\n      return JSON.parse(value as string);\n    } catch (e: any) {\n      Logger.error(e);\n    }\n  }\n}\n\nexport default new Storage();\n","import React, { useState } from \"react\";\nimport { BrowserRouter, HashRouter, Route, Switch } from \"react-router-dom\";\nimport Login1 from \"../Login/Login1\";\nimport Game from \"../Game/Game\";\nimport Score from \"../Score/Score\";\nimport Storage from \"../../utils/Storage\";\nimport { UserDesc } from \"../../interfaces/interfaces\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [user, setUser] = useState<UserDesc>({ name: \"player\", score: 0 });\n  const [currentScore, setCurrentScore] = useState(0);\n\n  const loginUser = (user: string) => {\n    let allUsers: UserDesc[] = Storage.getItem(\"users\") || [];\n    Storage.setItem<UserDesc>(\"user\", { name: user, score: 0 });\n\n    const selectUser = allUsers.find((item) => item.name === user);\n\n    if (selectUser === undefined) {\n      allUsers = allUsers.concat({ name: user, score: 0 });\n      Storage.setItem(\"users\", allUsers);\n      setUser({ name: user, score: 0 });\n      return;\n    }\n    setUser(selectUser);\n  };\n\n  const scoreNow = (score: number) => {\n    setCurrentScore(score);\n  };\n\n  return (\n    <HashRouter>\n      <div className=\"root-wrap-app\">\n        <div className=\"wrap-app\">\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              component={() => <Login1 loginUser={loginUser} />}\n            />\n            <Route\n              path=\"/game\"\n              component={() => <Game user={user} scoreNow={scoreNow} />}\n            />\n            <Route\n              path=\"/score\"\n              component={() => (\n                <Score user={user} CurrentScore={currentScore} />\n              )}\n            />\n          </Switch>\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./index.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}