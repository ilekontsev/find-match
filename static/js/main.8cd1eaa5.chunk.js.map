{"version":3,"sources":["components/Login/Login1.tsx","components/Game/Game.tsx","components/Score/Score.tsx","utils/Storage/index.ts","components/App/App.tsx","index.tsx"],"names":["Login","props","useState","value","setValue","users","setUsers","history","useHistory","selectUser","e","user","target","innerText","push","loginUser","className","onClick","InputBase","placeholder","onChange","textInput","allUsers","JSON","parse","localStorage","getItem","arrSearch","forEach","item","name","toUpperCase","includes","onKeyDown","buttonCode","key","trim","length","endAdornment","InputAdornment","position","stopPropagation","map","Game","createCardsArr","i","id","isActive","findMatch","card","duplicateCardsArray","concat","sort","Math","random","cardArr","setCardArr","blockOnClick","setBlockOnClick","setUser","score","setScore","useEffect","setTimeout","hiddenFront","updateCard","firstElement","secondElement","updChecked","updCardArr","filter","console","log","Number","funcScore","every","scoreNow","gameOver","handleClickCard","ind","index","changeIsActive","openCard","src","alt","Score","currentUser","setCurrentUser","updUser","CurrentScore","item1","item2","setItem","stringify","Logger","error","stringified","App","currentScore","setCurrentScore","Storage","find","undefined","exact","path","component","Login1","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cd1eaa5.chunk.js","sourcesContent":["import React, { ChangeEvent, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport { InputBase } from \"@material-ui/core\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport \"./Login.css\";\r\nimport { UserDesc } from \"../../interfaces/interfaces\";\r\n\r\nfunction Login(props: any) {\r\n  const [value, setValue] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const history = useHistory();\r\n  const writeInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const textInput = e.target.value;\r\n    setValue(textInput);\r\n    if (textInput) {\r\n      const allUsers: UserDesc[] = JSON.parse(\r\n        localStorage.getItem(\"users\") || \"[]\"\r\n      );\r\n      const arrSearch: string[] = [];\r\n      allUsers.forEach((item) => {\r\n        if (item.name.toUpperCase().includes(textInput.toUpperCase())) {\r\n          // @ts-ignore\r\n          arrSearch.push({ name: item.name });\r\n        }\r\n      });\r\n      // @ts-ignore\r\n      setUsers(arrSearch);\r\n      return 0;\r\n    }\r\n    setUsers([]);\r\n  };\r\n  const saveLogin = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    const target = e.target as HTMLInputElement;\r\n    const buttonCode = e.key;\r\n    const user = target.value;\r\n    if (buttonCode === \"Enter\" && user.trim().length) {\r\n      setValue(\"\");\r\n      history.push(\"/game\");\r\n      props.loginUser(user);\r\n    }\r\n  };\r\n  const showUsers = (e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    const allUsers = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n    setUsers(allUsers);\r\n  };\r\n  const selectUser = (e: React.MouseEvent) => {\r\n    const target = e.target as HTMLElement;\r\n    const user = target.innerText;\r\n    history.push(\"/game\");\r\n    props.loginUser(user);\r\n  };\r\n  const hiddenBlockSearch = () => {\r\n    setUsers([]);\r\n  };\r\n  // @ts-ignore\r\n  return (\r\n    <div className=\"root-wrap-login\" onClick={hiddenBlockSearch}>\r\n      <div className=\"wrap-login\">\r\n        <div className=\"wrap-text-login\">\r\n          <p>Game</p>\r\n          <p>Find Matches</p>\r\n        </div>\r\n        <div className=\"wrap-input-login\">\r\n          <InputBase\r\n            placeholder={\"Input name...\"}\r\n            className=\"input-login\"\r\n            value={value}\r\n            onChange={writeInput}\r\n            onKeyDown={saveLogin}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <ArrowDropDownIcon\r\n                  className={\"icon-input-login\"}\r\n                  onClick={showUsers}\r\n                />\r\n              </InputAdornment>\r\n            }\r\n          />\r\n          <div className={users ? \"result-users-login\" : \"hidden-block\"}>\r\n            {users.map((item: UserDesc) => (\r\n              <div\r\n                key={item.name + 12}\r\n                className=\"element-user-login\"\r\n                onClick={selectUser}\r\n              >\r\n                <p className=\"item-login\">{item.name}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CardsDesc, UserDesc } from \"../../interfaces/interfaces\";\r\nimport Storage from \"../../utils/Storage\";\r\nimport \"./Game.css\";\r\n\r\nfunction Game(props: any) {\r\n  // создание массива с карточками\r\n  let createCardsArr: CardsDesc[] = [];\r\n  for (let i = 0; i < 12; i++) {\r\n    createCardsArr[i] = {\r\n      id: i,\r\n      isActive: true,\r\n      findMatch: false,\r\n      card: `/assets/${i + 1}.jpg`,\r\n    };\r\n  }\r\n  // дублируем карточки и перемешиваем\r\n  const duplicateCardsArray = createCardsArr.map((item) => ({ ...item }));\r\n  createCardsArr = createCardsArr.concat(duplicateCardsArray);\r\n  function shuffle(array: CardsDesc[]) {\r\n    array.sort(() => Math.random() - 0.5);\r\n  }\r\n  shuffle(createCardsArr);\r\n\r\n  const [cardArr, setCardArr] = useState(createCardsArr);\r\n  const [blockOnClick, setBlockOnClick] = useState(true);\r\n  const [user, setUser] = useState({ name: \"player\" });\r\n  const [score, setScore] = useState(0);\r\n  const history = useHistory();\r\n\r\n  // перевернуть карточки\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\") || \"{}\");\r\n    setUser(user);\r\n    setTimeout(() => {\r\n      const hiddenFront = createCardsArr.map((item) => {\r\n        if (item.isActive) {\r\n          item.isActive = false;\r\n          return item;\r\n        }\r\n        return item;\r\n      });\r\n      setCardArr(hiddenFront);\r\n    }, 3000);\r\n  }, []);\r\n\r\n  // переворачиваем выбраную карту\r\n  const changeIsActive = (value: CardsDesc, ind: number) => {\r\n    return cardArr.filter((item, index: number) => {\r\n      if (index === ind) {\r\n        item.isActive = true;\r\n        return item;\r\n      }\r\n      return item;\r\n    });\r\n  };\r\n\r\n  const gameOver = (updCardArr: CardsDesc[]) => {\r\n    const checkFull = updCardArr.every((item) => item.findMatch);\r\n    if (checkFull) {\r\n      setTimeout(() => {\r\n        history.push(\"/score\");\r\n        props.scoreNow(score + 100);\r\n      }, 1600);\r\n    }\r\n  };\r\n\r\n  const funcScore = (updChecked: boolean) => {\r\n    console.log(updChecked);\r\n    if (!updChecked && score !== 0) {\r\n      setScore(score - 20);\r\n    }\r\n    if (updChecked) {\r\n      setScore(Number(score) + 100);\r\n    }\r\n  };\r\n  // сравниваем карточки\r\n  const updateCard = (\r\n    firstElement: CardsDesc,\r\n    secondElement: CardsDesc,\r\n    updChecked: boolean\r\n  ) => {\r\n    const updCardArr = cardArr.filter((item) => {\r\n      if (firstElement === item || secondElement === item) {\r\n        item.isActive = updChecked;\r\n        item.findMatch = updChecked;\r\n        return item;\r\n      }\r\n      return item;\r\n    });\r\n    funcScore(updChecked);\r\n    gameOver(updCardArr);\r\n    setCardArr(updCardArr);\r\n    setBlockOnClick(true);\r\n  };\r\n\r\n  const handleClickCard = (value: CardsDesc, ind: number) => {\r\n    if (blockOnClick) {\r\n      setCardArr(changeIsActive(value, ind));\r\n\r\n      const openCard = cardArr.filter(\r\n        (item) => item.isActive && !item.findMatch\r\n      );\r\n      const [firstElement, secondElement] = openCard;\r\n      if (openCard.length === 2) {\r\n        setBlockOnClick(false);\r\n\r\n        if (firstElement.id === secondElement.id) {\r\n          updateCard(firstElement, secondElement, true);\r\n        } else {\r\n          setTimeout(() => {\r\n            updateCard(firstElement, secondElement, false);\r\n          }, 700);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"root-wrap-game\">\r\n      <div className=\"wrap-score-game\">\r\n        <div className=\"block-score-user\">\r\n          {user.name}: {score}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"wrap-game\">\r\n        {cardArr.map((item, index: number) => (\r\n          <div\r\n            key={index}\r\n            onClick={() => handleClickCard(item, index)}\r\n            className={item.isActive ? \"game-card flip\" : \"game-card\"}\r\n          >\r\n            <div className=\"wrap-front-card\">\r\n              <img src={item.card} alt=\"\" className=\"front-card\" />\r\n            </div>\r\n            <div className=\"wrap-front-back\">\r\n              <img src=\"/assets/backimg.png\" alt=\"\" className=\"back-card\" />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Score.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserDesc } from \"../../interfaces/interfaces\";\r\n\r\nfunction Score(props: any) {\r\n  const [users, setUsers] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState({\r\n    index: 1,\r\n    name: \"player\",\r\n    score: 0,\r\n  });\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    const allUsers: UserDesc[] = JSON.parse(\r\n      localStorage.getItem(\"users\") || \"[]\"\r\n    );\r\n    const updUser = allUsers.filter((item) => {\r\n      if (item.name === props.user.name && item.score < props.CurrentScore) {\r\n        item.score = props.CurrentScore;\r\n      }\r\n      return item;\r\n    });\r\n    updUser.sort((item1, item2) => item2.score - item1.score);\r\n    // @ts-ignore\r\n    setUsers(updUser);\r\n    // eslint-disable-next-line array-callback-return\r\n    updUser.forEach((item, index: number) => {\r\n      if (item.name === props.user.name) {\r\n        item.index = index + 1;\r\n        // @ts-ignore\r\n        setCurrentUser(item);\r\n      }\r\n    });\r\n    localStorage.setItem(\"users\", JSON.stringify(updUser));\r\n  }, []);\r\n\r\n  const restartGame = () => {\r\n    history.push(\"/game\");\r\n  };\r\n  const logout = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"root-wrap-score\">\r\n      <div className=\"wrap-score\">\r\n        <table className=\"table-wrap-score\">\r\n          <thead>\r\n            <tr>\r\n              <th>№</th>\r\n              <th>User</th>\r\n              <th>Current score</th>\r\n              <th>Best score</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{currentUser.index}</td>\r\n              <td>{currentUser.name}</td>\r\n              <td>{props.CurrentScore}</td>\r\n              <td>{currentUser.score}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"wrap-button-score\">\r\n        <button\r\n          onClick={restartGame}\r\n          className=\"restart-button-score but-score\"\r\n        >\r\n          Restart game\r\n        </button>\r\n        <button onClick={logout} className=\"logout-button-score but-score\">\r\n          New user\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"wrap-score\">\r\n        <table className=\"table-wrap-score\">\r\n          <thead>\r\n            <tr>\r\n              <th>№</th>\r\n              <th>Users</th>\r\n              <th>Best score</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((item: UserDesc, index: number) => (\r\n              <tr key={index + item.name}>\r\n                <td>{index + 1}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.score}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Score;\r\n","const Logger = {\r\n  error: (e: Error): void => {\r\n    console.error(e);\r\n  },\r\n};\r\n\r\nclass Storage {\r\n  setItem<T>(key: string, value: T): void {\r\n    try {\r\n      const stringified = JSON.stringify(value);\r\n      localStorage.setItem(key, stringified);\r\n    } catch (e) {\r\n      Logger.error(e);\r\n    }\r\n  }\r\n\r\n  getItem<T>(key: string): T | undefined {\r\n    try {\r\n      const value = localStorage.getItem(key);\r\n      return JSON.parse(value as string);\r\n    } catch (e) {\r\n      Logger.error(e);\r\n    }\r\n  }\r\n}\r\n\r\nexport default new Storage();\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Login1 from \"../Login/Login1\";\r\nimport Game from \"../Game/Game\";\r\nimport Score from \"../Score/Score\";\r\nimport Storage from \"../../utils/Storage\";\r\nimport { UserDesc } from \"../../interfaces/interfaces\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState<UserDesc>({ name: \"player\", score: 0 });\r\n  const [currentScore, setCurrentScore] = useState(0);\r\n\r\n  const loginUser = (user: string) => {\r\n    let allUsers: UserDesc[] = Storage.getItem(\"users\") || [];\r\n    Storage.setItem<UserDesc>(\"user\", { name: user, score: 0 });\r\n\r\n    const selectUser = allUsers.find((item) => item.name === user);\r\n\r\n    if (selectUser === undefined) {\r\n      allUsers = allUsers.concat({ name: user, score: 0 });\r\n      Storage.setItem(\"users\", allUsers);\r\n      setUser({ name: user, score: 0 });\r\n      return;\r\n    }\r\n    setUser(selectUser);\r\n  };\r\n\r\n  const scoreNow = (score: number) => {\r\n    setCurrentScore(score);\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"root-wrap-app\">\r\n        <div className=\"wrap-app\">\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              component={() => <Login1 loginUser={loginUser} />}\r\n            />\r\n            <Route\r\n              path=\"/game\"\r\n              component={() => <Game user={user} scoreNow={scoreNow} />}\r\n            />\r\n            <Route\r\n              path=\"/score\"\r\n              component={() => (\r\n                <Score user={user} CurrentScore={currentScore} />\r\n              )}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App/App\";\r\nimport \"./index.css\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}